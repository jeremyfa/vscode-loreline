{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Loreline",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#beat-block"
        },
        {
            "include": "#character-block"
        },
        {
            "include": "#state-block"
        },
        {
            "include": "#choice-block"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#quoted-dialogues"
        },
        {
            "include": "#quoted-strings"
        },
        {
            "include": "#assigns"
        },
        {
            "include": "#transitions"
        },
        {
            "include": "#unquoted-dialogues"
        },
        {
            "include": "#unquoted-strings"
        },
        {
            "include": "#functions-in-beat"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#constants"
        },
        {
            "include": "#variables"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.loreline",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.loreline",
                    "begin": "/\\*",
                    "end": "\\*/",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment.loreline"
                        }
                    }
                }
            ]
        },
        "character-block": {
            "patterns": [
                {
                    "begin": "((?:\\s*/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/)*\\s*)\\b(character)\\b((?:\\s*/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/)*\\s*)",
                    "beginCaptures": {
                        "1": {
                            "patterns": [
                                {
                                    "include": "#comments"
                                }
                            ]
                        },
                        "2": {
                            "name": "keyword.control.character.loreline"
                        },
                        "3": {
                            "patterns": [
                                {
                                    "include": "#comments"
                                }
                            ]
                        }
                    },
                    "end": "(?<=\\})",
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#braces-in-keyval"
                        },
                        {
                            "match": "(\\b[\\w\\d_]+\\b)",
                            "name": "entity.name.class.loreline"
                        }
                    ]
                }
            ]
        },
        "state-block": {
            "patterns": [
                {
                    "begin": "((?:\\s*/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/)*\\s*)(\\b(state)\\b)",
                    "beginCaptures": {
                        "1": {
                            "patterns": [
                                {
                                    "include": "#comments"
                                }
                            ]
                        },
                        "3": {
                            "name": "keyword.control.state.loreline"
                        }
                    },
                    "end": "(?<=\\})",
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#braces-in-keyval"
                        }
                    ]
                }
            ]
        },
        "braces-in-keyval": {
            "begin": "\\{",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.block.begin.loreline"
                }
            },
            "end": "\\}",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.block.end.loreline"
                }
            },
            "patterns": [
                {
                    "include": "#braces-in-keyval"
                },
                {
                    "include": "#keyval-keys-patterns"
                }
            ]
        },
        "arrays-in-keyval": {
            "begin": "\\[",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.array.begin.loreline"
                }
            },
            "end": "\\]",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.array.end.loreline"
                }
            },
            "patterns": [
                {
                    "include": "#braces-in-keyval"
                },
                {
                    "include": "#keyval-keys-patterns"
                }
            ]
        },
        "keyval-keys-patterns": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#keyval-patterns"
                }
            ]
        },
        "keyval-keys": {
            "patterns": [
                {
                    "begin": "(\\b[a-zA-Z_][a-zA-Z0-9_]*\\b)\\s*(:)",
                    "end": "$",
                    "captures": {
                        "1": {
                            "name": "variable.other.loreline"
                        },
                        "2": {
                            "name": "keyword.operator.type.annotation.loreline"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#braces-in-keyval"
                        },
                        {
                            "include": "#arrays-in-keyval"
                        },
                        {
                            "include": "#keyval-patterns"
                        }
                    ]
                }
            ]
        },
        "keyval-patterns": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#functions"
                },
                {
                    "include": "#quoted-string-values"
                },
                {
                    "include": "#unquoted-string-values"
                },
                {
                    "include": "#constants"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "quoted-string-values": {
            "patterns": [
                {
                    "begin": "(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.double.loreline"
                        }
                    },
                    "end": "(\")",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.loreline"
                        }
                    },
                    "patterns": [
                        {
                            "name": "constant.character.escape.loreline",
                            "match": "\\\\."
                        },
                        {
                            "include": "#string-interpolation"
                        },
                        {
                            "match": ".",
                            "name": "string.quoted.double.loreline"
                        }
                    ]
                }
            ]
        },
        "unquoted-string-values": {
            "patterns": [
                {
                    "begin": "(?:^|(?<=\\s|[({\\[,]))(?!\\s*->)(?!\\s*(?:state|beat|character|choice|if|else|new|true|false|null)\\b)(?!\\s*:)(?!\\s*})(?!\\s*])(?!\\s*\\[)(?!\\s*\\{)(?!\\s*[\\w\\d_]+\\s*:)(?!\\s*\\[)(?!\\s*(?:[0-9]*\\.?[0-9]+)\\s*$)((?:\\/\\*[^*]*\\*\\/\\s*)*)(?=.*[^\\s\"+=\\-*/(){}\\[\\]:\\n\\r])(\\s*)",
                    "beginCaptures": {
                        "2": {}
                    },
                    "end": "$|(?=[{\\n]|->\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*$)|(?=(?<=[^\\s/]\\s*)(//|/\\*))",
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "name": "constant.character.escape.loreline",
                            "match": "\\\\."
                        },
                        {
                            "include": "#string-interpolation"
                        },
                        {
                            "match": ".",
                            "name": "string.unquoted.loreline"
                        }
                    ]
                }
            ]
        },
        "beat-block": {
            "patterns": [
                {
                    "begin": "((?:\\s*/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/)*\\s*)(\\b(beat)\\b)",
                    "beginCaptures": {
                        "1": {
                            "patterns": [
                                {
                                    "include": "#comments"
                                }
                            ]
                        },
                        "3": {
                            "name": "keyword.control.beat.loreline"
                        }
                    },
                    "end": "(?<=\\})",
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#braces-in-beat"
                        },
                        {
                            "match": "(\\b[\\w\\d_]+\\b)",
                            "name": "entity.name.type.beat.loreline"
                        }
                    ]
                }
            ]
        },
        "braces-in-beat": {
            "begin": "\\{",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.block.begin.loreline"
                }
            },
            "end": "\\}",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.block.end.loreline"
                }
            },
            "patterns": [
                {
                    "include": "#beat-block"
                },
                {
                    "include": "#state-block"
                },
                {
                    "include": "#choice-block"
                },
                {
                    "include": "#braces-in-beat"
                },
                {
                    "include": "#beat-patterns"
                }
            ]
        },
        "beat-patterns": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#quoted-dialogues"
                },
                {
                    "include": "#quoted-strings"
                },
                {
                    "include": "#assigns"
                },
                {
                    "include": "#transitions"
                },
                {
                    "include": "#unquoted-dialogues"
                },
                {
                    "include": "#unquoted-strings"
                },
                {
                    "include": "#functions-in-beat"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#constants"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "choice-block": {
            "patterns": [
                {
                    "begin": "\\b(choice)\\b",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.choice.loreline"
                        }
                    },
                    "end": "(?<=\\})",
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "include": "#braces-in-choice"
                        },
                        {
                            "include": "#keywords"
                        },
                        {
                            "include": "#transitions"
                        },
                        {
                            "include": "#functions"
                        },
                        {
                            "include": "#operators"
                        },
                        {
                            "include": "#constants"
                        },
                        {
                            "include": "#variables"
                        }
                    ]
                }
            ]
        },
        "braces-in-choice": {
            "begin": "\\{",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.section.block.begin.loreline"
                }
            },
            "end": "\\}",
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.block.end.loreline"
                }
            },
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#braces-in-beat"
                },
                {
                    "include": "#unquoted-choice-strings"
                },
                {
                    "include": "#transitions"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#keywords-in-choice"
                },
                {
                    "include": "#functions-in-choice"
                },
                {
                    "include": "#constants"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.loreline",
                    "match": "\\b(if|else|new)\\b"
                }
            ]
        },
        "keywords-in-choice": {
            "patterns": [
                {
                    "name": "keyword.control.loreline",
                    "match": "(?<!^\\s*(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/\\s*)*)\\b(if)\\b"
                }
            ]
        },
        "quoted-strings": {
            "patterns": [
                {
                    "begin": "(\")",
                    "beginCaptures": {
                        "1": {
                            "name": "string.quoted.double.loreline"
                        }
                    },
                    "end": "(\")",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.loreline"
                        }
                    },
                    "patterns": [
                        {
                            "name": "constant.character.escape.loreline",
                            "match": "\\\\."
                        },
                        {
                            "include": "#string-tags"
                        },
                        {
                            "include": "#string-interpolation"
                        },
                        {
                            "match": ".",
                            "name": "string.quoted.double.loreline"
                        }
                    ]
                }
            ]
        },
        "quoted-dialogues": {
            "patterns": [
                {
                    "begin": "(\\s*([\\w\\d_]+)\\s*(:)\\s*)((?:\\/\\*[^*]*\\*\\/\\s*)*)(\")",
                    "beginCaptures": {
                        "2": {
                            "name": "entity.name.class.loreline"
                        },
                        "3": {
                            "name": "keyword.operator.type.annotation.loreline"
                        },
                        "4": {
                            "patterns": [
                                {
                                    "include": "#comments"
                                }
                            ]
                        },
                        "5": {
                            "name": "string.quoted.double.loreline"
                        }
                    },
                    "end": "(\")",
                    "endCaptures": {
                        "1": {
                            "name": "string.quoted.double.loreline"
                        }
                    },
                    "patterns": [
                        {
                            "name": "constant.character.escape.loreline",
                            "match": "\\\\."
                        },
                        {
                            "include": "#string-tags"
                        },
                        {
                            "include": "#string-interpolation"
                        },
                        {
                            "match": ".",
                            "name": "string.quoted.double.loreline"
                        }
                    ]
                }
            ]
        },
        "unquoted-strings": {
            "patterns": [
                {
                    "begin": "^(?!\\s*->)(?!\\s*(?:state|beat|character|choice|else|new)\\b)(?!\\s*if\\s*(?:/\\*[^*]*\\*/\\s*)*\\()(?!\\s*[\\w\\d_]+\\s*:)(?!\\s*:)(?!\\s*})(?!\\s*])(?!\\s*\\[)(?!\\s*\\{)(?!\\s*(?:\\/\\*[^*]*\\*\\/\\s*)*[\\w\\d_]+(?:\\s*\\.\\s*[\\w\\d_]+)*(?:\\s*\\[.*\\])*\\s*\\()((?:\\/\\*[^*]*\\*\\/\\s*)*)(?=.*[^\\s\"+=\\-*/(){}\\[\\]:\\n\\r])(\\s*)",
                    "beginCaptures": {
                        "2": {}
                    },
                    "end": "$|(?=[{\\n]|->\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*$)|(?=(?<=[^\\s/]\\s*)(//|/\\*))",
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "name": "constant.character.escape.loreline",
                            "match": "\\\\."
                        },
                        {
                            "include": "#string-tags"
                        },
                        {
                            "include": "#string-interpolation"
                        },
                        {
                            "match": ".",
                            "name": "string.unquoted.loreline"
                        }
                    ]
                }
            ]
        },
        "unquoted-choice-strings": {
            "patterns": [
                {
                    "begin": "^(?!\\s*->)(?!\\s*(?:state|beat|character|choice|else|new)\\b)(?!\\s*[\\w\\d_]+\\s*:)(?!\\s*:)(?!\\s*})(?!\\s*])(?!\\s*\\[)(?!\\s*\\{)((?:\\/\\*[^*]*\\*\\/\\s*)*)(?=.*[^\\s\"+=\\-*/(){}\\[\\]:\\n\\r])(\\s*)",
                    "beginCaptures": {
                        "2": {}
                    },
                    "end": "$|(?=[{\\n])|(?<=\\S)(?=\\s*\\bif\\s*(?:/\\*[^*]*\\*\\/\\s*)*\\()|(?=->\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*$)|(?=(?<=[^\\s/]\\s*)(//|/\\*))",
                    "patterns": [
                        {
                            "include": "#comments"
                        },
                        {
                            "name": "constant.character.escape.loreline",
                            "match": "\\\\."
                        },
                        {
                            "include": "#string-tags"
                        },
                        {
                            "include": "#string-interpolation"
                        },
                        {
                            "match": ".",
                            "name": "string.unquoted.choice.loreline"
                        }
                    ]
                }
            ]
        },
        "unquoted-dialogues": {
            "patterns": [
                {
                    "begin": "^(?!\\s*(?:state|beat|character|choice|else|new)\\b)(\\s*([\\w\\d_]+)\\s*(:)\\s*)(?!\\s*if\\s*(?:/\\*[^*]*\\*/\\s*)*\\()(?!\\s*:)(?!\\s*})(?!\\s*])(?!\\s*\\[)(?!\\s*\\{)((?:\\/\\*[^*]*\\*\\/\\s*)*)(?!\\s*\")",
                    "beginCaptures": {
                        "2": {
                            "name": "entity.name.class.loreline"
                        },
                        "3": {
                            "name": "keyword.operator.type.annotation.loreline"
                        },
                        "4": {
                            "patterns": [
                                {
                                    "include": "#comments"
                                }
                            ]
                        }
                    },
                    "end": "$|(?=[{\\n]|->\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*$)|(?=(?<=[^\\s/]\\s*)(//|/\\*))",
                    "patterns": [
                        {
                            "name": "constant.character.escape.loreline",
                            "match": "\\\\."
                        },
                        {
                            "include": "#string-tags"
                        },
                        {
                            "include": "#string-interpolation"
                        },
                        {
                            "match": ".",
                            "name": "string.unquoted.loreline"
                        }
                    ]
                }
            ]
        },
        "string-tags": {
            "patterns": [
                {
                    "begin": "<",
                    "end": ">",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.tag.loreline"
                        }
                    },
                    "contentName": "storage.modifier.metadata.loreline",
                    "patterns": [
                        {
                            "match": "[^<>]+",
                            "name": "storage.modifier.metadata.loreline"
                        }
                    ]
                }
            ]
        },
        "string-interpolation": {
            "patterns": [
                {
                    "begin": "\\$(?=\\$)",
                    "beginCaptures": {
                        "0": {
                            "name": "constant.character.escape.loreline"
                        }
                    },
                    "end": "\\$",
                    "endCaptures": {
                        "0": {
                            "name": "constant.character.escape.loreline"
                        }
                    },
                    "name": "string.quoted.single.loreline"
                },
                {
                    "begin": "(\\${)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.block.begin.loreline"
                        }
                    },
                    "end": "(})",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.block.end.loreline"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                },
                {
                    "match": "(\\$)([_a-zA-Z]\\w*)((\\.)([a-zA-Z_][a-zA-Z0-9_]*))*",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.block.begin.loreline"
                        },
                        "2": {
                            "name": "variable.other.loreline"
                        },
                        "4": {
                            "name": "punctuation.accessor.loreline"
                        },
                        "5": {
                            "name": "variable.other.loreline"
                        }
                    }
                }
            ]
        },
        "character-dialogue": {
            "patterns": [
                {
                    "match": "^\\s*([\\w\\d_]+)\\s*:",
                    "captures": {
                        "1": {
                            "name": "entity.name.class.loreline"
                        }
                    }
                }
            ]
        },
        "transitions": {
            "patterns": [
                {
                    "match": "(->)\\s*((?:\\/\\*[^*]*\\*\\/\\s*)*?)([a-zA-Z_][a-zA-Z0-9_]*|\\.)",
                    "captures": {
                        "1": {
                            "name": "keyword.control.flow.loreline"
                        },
                        "2": {
                            "name": "punctuation.definition.comment.loreline"
                        },
                        "3": {
                            "name": "entity.name.type.beat.loreline"
                        }
                    }
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.loreline",
                    "match": "\\+|-|\\*|/|%"
                },
                {
                    "name": "keyword.operator.assignment.loreline",
                    "match": "=|\\+=|-=|\\*=|/="
                },
                {
                    "name": "keyword.operator.logical.loreline",
                    "match": "&&|\\|\\||!|==|!=|>|<|>=|<="
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "name": "constant.numeric.loreline",
                    "match": "\\b(?:[0-9]*\\.?[0-9]+)\\b"
                },
                {
                    "name": "constant.language.loreline",
                    "match": "\\b(true|false|null)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.loreline",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.loreline"
                        }
                    }
                },
                {
                    "match": "\\.\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.method.loreline"
                        }
                    }
                }
            ]
        },
        "functions-in-beat": {
            "patterns": [
                {
                    "match": "\\b(_*[a-z][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.loreline"
                        }
                    }
                },
                {
                    "match": "\\b(_*[A-Z][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.type.beat.loreline"
                        }
                    }
                },
                {
                    "match": "\\.\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.method.loreline"
                        }
                    }
                }
            ]
        },
        "functions-in-choice": {
            "patterns": [
                {
                    "match": "(?<!^\\s*(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/\\s*)*)\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.loreline"
                        }
                    }
                },
                {
                    "match": "(?<!^\\s*(?:/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/\\s)*)\\.\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "entity.name.function.method.loreline"
                        }
                    }
                }
            ]
        },
        "assigns": {
            "patterns": [
                {
                    "name": "assignment.scope",
                    "begin": "^(?=[^<>\\(\\)]+?\\s*[+\\-*/%]?=\\s*)",
                    "end": "$",
                    "patterns": [
                        {
                            "include": "#expressions"
                        }
                    ]
                }
            ]
        },
        "expressions": {
            "patterns": [
                {
                    "include": "#comments"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#functions"
                },
                {
                    "include": "#constants"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#quoted-strings"
                }
            ]
        }
    },
    "scopeName": "source.loreline"
}